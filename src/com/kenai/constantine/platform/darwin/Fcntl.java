// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated Wed Feb 04 17:40:32 -0600 2009
package com.kenai.constantine.platform.darwin;
public enum Fcntl implements com.kenai.constantine.Constant {
FREAD(1),
FWRITE(2),
FAPPEND(8),
FASYNC(64),
FFSYNC(128),
FNONBLOCK(4),
FNDELAY(4),
F_DUPFD(0),
F_GETFD(1),
F_SETFD(2),
F_GETFL(3),
F_SETFL(4),
F_GETOWN(5),
F_SETOWN(6),
F_GETLK(7),
F_SETLK(8),
F_SETLKW(9),
F_CHKCLEAN(41),
F_PREALLOCATE(42),
F_SETSIZE(43),
F_RDADVISE(44),
F_RDAHEAD(45),
F_READBOOTSTRAP(46),
F_WRITEBOOTSTRAP(47),
F_NOCACHE(48),
F_LOG2PHYS(49),
F_GETPATH(50),
F_FULLFSYNC(51),
F_PATHPKG_CHECK(52),
F_FREEZE_FS(53),
F_THAW_FS(54),
F_GLOBAL_NOCACHE(55),
F_ADDSIGS(59),
F_MARKDEPENDENCY(60),
F_RDLCK(1),
F_UNLCK(2),
F_WRLCK(3),
F_ALLOCATECONTIG(2),
F_ALLOCATEALL(4);
private final int value;
private Fcntl(int value) { this.value = value; }
public static final long MIN_VALUE = 0;
public static final long MAX_VALUE = 128;

static final class StringTable {
  public static final java.util.Map<Fcntl, String> descriptions = generateTable();
  public static final java.util.Map<Fcntl, String> generateTable() {
    java.util.Map<Fcntl, String> map = new java.util.EnumMap<Fcntl, String>(Fcntl.class);
  map.put(FREAD, "Operation not permitted");
  map.put(FWRITE, "No such file or directory");
  map.put(FAPPEND, "Exec format error");
  map.put(FASYNC, "Host is down");
  map.put(FFSYNC, "Unknown error: 128");
  map.put(FNONBLOCK, "Interrupted system call");
  map.put(FNDELAY, "Interrupted system call");
  map.put(F_DUPFD, "Unknown error: 0");
  map.put(F_GETFD, "Operation not permitted");
  map.put(F_SETFD, "No such file or directory");
  map.put(F_GETFL, "No such process");
  map.put(F_SETFL, "Interrupted system call");
  map.put(F_GETOWN, "Input/output error");
  map.put(F_SETOWN, "Device not configured");
  map.put(F_GETLK, "Argument list too long");
  map.put(F_SETLK, "Exec format error");
  map.put(F_SETLKW, "Bad file descriptor");
  map.put(F_CHKCLEAN, "Protocol wrong type for socket");
  map.put(F_PREALLOCATE, "Protocol not available");
  map.put(F_SETSIZE, "Protocol not supported");
  map.put(F_RDADVISE, "Socket type not supported");
  map.put(F_RDAHEAD, "Operation not supported");
  map.put(F_READBOOTSTRAP, "Protocol family not supported");
  map.put(F_WRITEBOOTSTRAP, "Address family not supported by protocol family");
  map.put(F_NOCACHE, "Address already in use");
  map.put(F_LOG2PHYS, "Can't assign requested address");
  map.put(F_GETPATH, "Network is down");
  map.put(F_FULLFSYNC, "Network is unreachable");
  map.put(F_PATHPKG_CHECK, "Network dropped connection on reset");
  map.put(F_FREEZE_FS, "Software caused connection abort");
  map.put(F_THAW_FS, "Connection reset by peer");
  map.put(F_GLOBAL_NOCACHE, "No buffer space available");
  map.put(F_ADDSIGS, "Too many references: can't splice");
  map.put(F_MARKDEPENDENCY, "Operation timed out");
  map.put(F_RDLCK, "Operation not permitted");
  map.put(F_UNLCK, "No such file or directory");
  map.put(F_WRLCK, "No such process");
  map.put(F_ALLOCATECONTIG, "No such file or directory");
  map.put(F_ALLOCATEALL, "Interrupted system call");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int value() { return value; }
}
